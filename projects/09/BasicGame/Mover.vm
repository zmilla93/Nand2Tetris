function Mover.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push constant 0
pop this 1
push constant 20
pop static 0
push static 0
push constant 2
call Math.divide 2
pop static 1
push constant 10
pop static 2
push constant 511
push static 0
sub
pop this 2
push constant 255
push static 0
sub
pop this 3
push pointer 0
return
function Mover.eraseMover 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push static 1
add
push this 1
push static 1
add
push static 1
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function Mover.drawMover 0
push argument 0
pop pointer 0
push this 0
push static 1
add
push this 1
push static 1
add
push static 1
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Mover.moveUp 0
push argument 0
pop pointer 0
push pointer 0
call Mover.eraseMover 1
pop temp 0
push this 1
push static 2
sub
push constant 1
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push static 2
sub
pop this 1
label IF_FALSE0
push this 1
push static 2
sub
push constant 0
eq
push this 1
push static 2
sub
push constant 0
lt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 1
label IF_FALSE1
push pointer 0
call Mover.drawMover 1
pop temp 0
push constant 0
return
function Mover.moveDown 0
push argument 0
pop pointer 0
push pointer 0
call Mover.eraseMover 1
pop temp 0
push this 1
push static 2
add
push this 3
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push static 2
add
pop this 1
label IF_FALSE0
push this 1
push static 2
add
push this 3
eq
push this 1
push static 2
add
push this 3
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
pop this 1
label IF_FALSE1
push pointer 0
call Mover.drawMover 1
pop temp 0
push constant 0
return
function Mover.moveLeft 0
push argument 0
pop pointer 0
push pointer 0
call Mover.eraseMover 1
pop temp 0
push this 0
push static 2
sub
push constant 1
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push static 2
sub
pop this 0
label IF_FALSE0
push this 0
push static 2
sub
push constant 0
eq
push this 0
push static 2
sub
push constant 0
lt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 0
label IF_FALSE1
push pointer 0
call Mover.drawMover 1
pop temp 0
push constant 0
return
function Mover.moveRight 0
push argument 0
pop pointer 0
push pointer 0
call Mover.eraseMover 1
pop temp 0
push this 0
push static 2
add
push this 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push static 2
add
pop this 0
label IF_FALSE0
push this 0
push static 2
add
push this 2
eq
push this 0
push static 2
add
push this 2
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
pop this 0
label IF_FALSE1
push pointer 0
call Mover.drawMover 1
pop temp 0
push constant 0
return
function Mover.dispose 0
push argument 0
pop pointer 0
push constant 0
return
